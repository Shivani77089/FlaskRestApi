
from app import app   # Here First app refer to the file name app and second app name is app variable that is present in app.py file
from model.user_model import user_model
from model.auth_model import auth_model
from flask import request, make_response, send_file
from datetime import datetime
import os

obj = user_model()           #Create object for user_model class
auth = auth_model()          #Create object for auth_model class


@app.route("/user/getall", methods=['GET'])
@auth.token_auth("/user/getall")
def user_getall_controller():
    return obj.user_getall_model()


@app.route("/user/addone", methods=['POST'])
def user_addone_controller():
    return obj.user_addone_model(request.form)


@app.route("/user/update", methods=['PUT'])
def user_update_controller():
    return obj.user_update_model(request.form)


@app.route("/user/delete/<id>", methods=['DELETE'])
def user_delete_controller(id):
    return obj.user_delete_model(id)


@app.route("/user/patch/<id>", methods=['PATCH'])
def user_patch_controller(id):
    return obj.user_patch_model(request.form, id)


@app.route("/user/pagination/limit/<limit>/page/<page>", methods=['GET'])
def user_pagination_controller(limit, page):
    return obj.user_pagination_model(limit, page)

#
# @app.route("/user/<id>/upload/avatar", methods=['PUT'])
# def user_upload_avatar_controller(id):
#     file = request.files['avatar']
#     uniqueFileName= str(datetime.now().timestamp()).replace(".", "")
#     fileNameSplit= file.filename.split(".")
#     ext = fileNameSplit[len(fileNameSplit)-1]
#     finalFilePath = f"uploads/{uniqueFileName}.{ext}"
#     file.save(finalFilePath)
#     return obj.user_upload_avatar_model(id, finalFilePath)


ALLOWED_EXTENSIONS = {'jpg', 'jpeg', 'png', 'gif'}


@app.route("/user/<id>/upload/avatar", methods=['PUT'])
def user_upload_avatar_controller(id):
    if 'avatar' not in request.files:
        return make_response({"error": "No file part 'avatar' in request"}, 400)
    file = request.files['avatar']
    if file.filename == '':
        return make_response({"error": "No selected file"}, 400)
    filename, ext = os.path.splitext(file.filename)
    if not ext or ext.lower().lstrip(".") not in ALLOWED_EXTENSIONS:
        return make_response({"error": "Invalid file type"}, 400)
    ext = ext.lower().lstrip(".")
    unique_filename = f"{str(datetime.now().timestamp()).replace('.', '')}.{ext}"
    UPLOAD_FOLDER = 'media'
    os.makedirs(UPLOAD_FOLDER, exist_ok=True)
    final_file_path = os.path.join(UPLOAD_FOLDER, unique_filename)
    file.save(final_file_path)
    return obj.user_upload_avatar_model(id, final_file_path)


@app.route("/upload/<filename>", methods=['GET'])
def user_getavatar_controller(filename):
    return send_file(f"media/{filename}")


@app.route("/user/login", methods=['POST'])
def user_login_controller():
    return obj.user_login_model(request.form)
